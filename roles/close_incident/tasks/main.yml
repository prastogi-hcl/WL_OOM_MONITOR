- name: Wait before next task
  ansible.builtin.pause:
    seconds: 230

- name: Read Incident Number from File
  slurp:
    src: "/tmp/incident_number.txt"
  register: incident_number_data

- name: Set Incident Number Fact
  set_fact:
    incident_number: "{{ incident_number_data['content'] | b64decode }}"

- name: Validate incident number existence
  fail:
     msg: "No incident number found. Exiting playbook."
  when: incident_number is not defined or incident_number | length == 0

- name: Get Incident sys_id from ServiceNow
  uri:
    url: "{{ servicenow_instance }}/api/now/table/incident?sysparm_query=number={{ incident_number }}"
    method: GET
    user: "{{ servicenow_user }}"
    password: "{{ servicenow_password }}"
    headers:
      Accept: "application/json"
    return_content: yes
  register: incident_data

- name: Set sys_id as fact
  set_fact:
    incident_sys_id: "{{ incident_data.json.result[0].sys_id }}"

- name: Resolve the ServiceNow Incident
  servicenow.itsm.problem:
    instance:
       host: "{{ servicenow_instance }}"
       username: "{{ servicenow_user }}"
       password: "{{ servicenow_password }}"
    #sys_id: "{{ incident_sys_id }}"
    close_notes: "Issue resolved. WebLogic is running fine now."
  register: resolve_incident

- name: Close the ServiceNow Incident
  servicenow.itsm.incident:
    instance:
       host: "{{ servicenow_instance }}"
       username: "{{ servicenow_user }}"
       password: "{{ servicenow_password }}"
    sys_id: "{{ incident_sys_id }}"
    #state: "Closed"
    #close_code: "Solved (Permanently)"
    close_notes: "Auto-closure of Incident after performing workaround.Please investigate further"
  when: resolve_incident is succeeded
  register: close_incident


- name: Display Incident Closure Status
  debug:
     msg: "Incident {{ incident_number }} has been successfully closed."

- name: Send OOM Alert Email
  mail:
    host: "{{ smtp_host }}"
    port: "{{ smtp_port }}"
    username: "{{ smtp_user }}"
    password: "{{ smtp_pass }}"
    to: "{{ email_recipient }}"
    subject: "WebLogic OutOfMemoryError Alert"
    body: "ServiceNow Incident {{ incident_number }} has been successfully closed."
 # when: incident_closure is succeeded
  register: notification_status

- name: Debug notification status
  debug:
    var: notification_status

- name: Display Notification Status
  debug:
      msg: "Notification sent successfully."
  when: notification_status.status | default(0) == 200
